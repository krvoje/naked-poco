csv(members) ::= <<
<trunc(members): {member|
    "<member.fieldName>",
    "<last(jsObj.members).fieldName>"}>
>>

Enum(jsObj)::= <<
var <jsObj.typeName> = [
<csv(jsObj.members)>
];
>>

Observable(member) ::= "self.<member.fieldName>=ko.observable(<member.type.defaultValue>);"

ArrayObservable(member) ::="self.<member.fieldName>=ko.observableArray(<member.type.defaultValue>);"

Function(jsObj) ::= <<
function <jsObj.typeName>() {
    self = this;

<jsObj.members: {member|
<if(member.type.array)>
    <ArrayObservable(member)>
<else>
    <Observable(member)>
<endif>
}>
    self.update = function(dto) {
<jsObj.members: {member|
        self.<member.fieldName>(dto.<member.fieldName>);
    }>    }

    self.dto = function() {
        return ko.toJS(self);
    }
}
>>

JavaScriptObject(jsObj) ::= <<
<if(jsObj.type.enum)>
    <Enum(jsObj)>
<else>
    <Function(jsObj)>
<endif>
>>